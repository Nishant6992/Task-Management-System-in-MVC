@model Task_Management_System2.Areas.Admin.Models.Main
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>New User Registration</title>
    <style>
        .container {
            margin: auto;
            width: 50%;
            padding: 50px;
            border-radius: 64px;
            background-color: #f5f5f5;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-control {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        .btn {
            display: inline-block;
            background-color: #007bff;
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            text-align: center;
            text-decoration: none;
        }

            .btn:hover {
                background-color: #0056b3;
            }

        .text-danger {
            color: red;
        }
    </style>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="container">
            <h4>Edit Employee Details</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.HiddenFor(model => model.Employee_Id)
                @Html.LabelFor(model => model.FirstName)
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName)
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Date_of_Birth)
                @Html.TextBoxFor(model => model.Date_of_Birth, new { Type = "Date", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Date_of_Birth, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email)
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address)
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone)
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>

           

            <div class="form-group">
                @Html.LabelFor(model => model.Password)
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-primary" />
            </div>
        </div>
    }
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <script>
        $(document).ready(function () {

            var minDate = new Date();
            minDate.setFullYear(minDate.getFullYear() - 20);


            $('.datepicker').datepicker({
                maxDate: '0',
                minDate: minDate,
                dateFormat: 'yy-mm-dd',
                onSelect: function (date) {
                    var selectedDate = new Date(date);
                    var minAgeDate = new Date();
                    minAgeDate.setFullYear(minAgeDate.getFullYear() - 20);

                    if (selectedDate > minAgeDate) {
                        $('.date-error').text('You must be at least 20 years old.');
                    } else {
                        $('.date-error').text('');
                    }
                }
            });
        });
    </script>
</body>
</html>


